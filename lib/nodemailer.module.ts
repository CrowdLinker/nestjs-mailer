import { NodemailerDrivers } from './constants';
import { DynamicModule, Module } from '@nestjs/common';
import { NodemailerCoreModule } from './nodemailer-core.module';
import { NodemailerOptions, NodemailerAsyncOptions } from './interfaces';

/**
 * Import and provide base nodemailer related classes.
 *
 * @module
 */
@Module({})
export class NodemailerModule {
  /**
   * Import the providers generated by nodemailer core module.
   *
   * @param {NodemailerOptions} options
   *
   * @returns {DynamicModule}
   */
  static forRoot<T extends NodemailerDrivers>(
    config: NodemailerOptions<T>,
  ): DynamicModule {
    return {
      module: NodemailerModule,
      imports: [NodemailerCoreModule.forRoot(config)],
    };
  }

  /**
   * Import the providers asynchronously generated by nodemailer core module.
   *
   * @param {NodemailerAsyncOptions} options
   *
   * @returns {DynamicModule}
   */
  static forRootAsync<T extends NodemailerDrivers>(
    options: NodemailerAsyncOptions<T>,
  ): DynamicModule {
    return {
      module: NodemailerModule,
      imports: [NodemailerCoreModule.forRootAsync(options)],
    };
  }
}
